set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'dracula/tmux'
set -g @dracula-show-battery false
set -g @dracula-show-powerline true
set -g @dracula-refresh-rate 10
set -g @dracula-plugins "cpu-usage gpu-usage ram-usage"
set -g @dracula-show-left-icon "#S"

bind -n M-f run-shell "~/.config/tmux/tsesh.sh --popup"

# Set Ctrl+Space as the prefix key
unbind C-b
set -g prefix C-Space


# Allows mouse to interact with tmux
set -g mouse on

# Start windows at 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# More space to status right name
set -g status-right-length 160

# Split like vim
unbind v
unbind s
unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"


# Better drag in vi-mode
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# Neovim integration
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|broot)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -r -n C-M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind-key -r -n C-M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind-key -r -n C-M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind-key -r -n C-M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panels with Ctrl + arrow keys
# bind-key -r -T prefix       M-Up              resize-pane -U
# bind-key -r -T prefix       M-Down            resize-pane -D
# bind-key -r -T prefix       M-Left            resize-pane -L
# bind-key -r -T prefix       M-Right           resize-pane -R

unbind -T prefix h
unbind -T prefix j
unbind -T prefix k
unbind -T prefix l
bind-key -r -T prefix h selectw -t 1
bind-key -r -T prefix j selectw -t 2
bind-key -r -T prefix k selectw -t 3
bind-key -r -T prefix l selectw -t 4

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Ttable1"
# bind-key -Ttable1 'C-w' send-keys C-w
# bind-key -Ttable1 'h' select-pane -L
# bind-key -Ttable1 'j' select-pane -D
# bind-key -Ttable1 'k' select-pane -U
# bind-key -Ttable1 'l' select-pane -R



# Move to next or previous session
bind -n M-n switch-client -n
bind -n M-p switch-client -p

# Go to last session
bind -n M-B switch-client -l
bind -n M-b switch-client -l

# Open lazygit in current pane CWD
bind -r g popup -d '#{pane_current_path}' -E -w 90% -h 90% lazygit

# Move panes
bind H display-panes -d 3000 "move-pane -bh -t '%%'"
bind J display-panes -d 3000 "move-pane -v -t '%%'"
bind K display-panes -d 3000 "move-pane -bv -t '%%'"
bind L display-panes -d 3000 "move-pane -h -t '%%'"

# Reload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

{{ if eq .chezmoi.os "darwin" -}}
# osx clipboard
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
{{ end -}}


set -g default-terminal "tmux-256color"
{{ if eq .chezmoi.os "darwin" }}
# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
{{ end }}
{{ if eq .chezmoi.os "linux" }}
set -as terminal-features ",xterm-256color:RGB"
{{ end }}


# Set session name as terminal title
set -g set-titles on
set -g set-titles-string '#{session_name}'

run '~/.tmux/plugins/tpm/tpm'
